"use strict";(self.webpackChunktailcall_run=self.webpackChunktailcall_run||[]).push([[8902],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7294),a=n(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var r=n(7462),a=n(7294),o=n(6010),i=n(2466),s=n(6550),l=n(1980),u=n(7392),p=n(12);function c(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const r=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=d(e),[i,s]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[l,u]=h({queryString:n,groupId:r}),[c,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,p.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),y=(()=>{const e=l??c;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{y&&s(y)}),[y]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var y=n(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:s,selectValue:l,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),r=u[n].value;r!==s&&(c(t),l(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},i,{className:(0,o.Z)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":s===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:r}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function k(e){const t=f(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",g.tabList)},a.createElement(b,(0,r.Z)({},e,t)),a.createElement(v,(0,r.Z)({},e,t)))}function w(e){const t=(0,y.Z)();return a.createElement(k,(0,r.Z)({key:String(t)},e))}},643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var r=n(7462),a=(n(7294),n(3905)),o=n(4866),i=n(5162);const s={title:"Configuration",sidebar_position:2},l=void 0,u={unversionedId:"getting_started/configuration",id:"getting_started/configuration",title:"Configuration",description:"For our first example, we are going to compose a GraphQL schema from the REST APIs at https://jsonplaceholder.typicode.com, a free online REST API with some fake data.",source:"@site/docs/getting_started/configuration.mdx",sourceDirName:"getting_started",slug:"/getting_started/configuration",permalink:"/docs/getting_started/configuration",draft:!1,editUrl:"https://github.com/tailcallhq/tailcallhq.github.io/tree/develop/docs/getting_started/configuration.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Configuration",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/getting_started"},next:{title:"Launch",permalink:"/docs/getting_started/launch"}},p={},c=[],d={toc:c},m="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"For our first example, we are going to compose a GraphQL schema from the REST APIs at ",(0,a.kt)("a",{href:"https://jsonplaceholder.typicode.com",target:"_blank"},(0,a.kt)("a",{parentName:"p",href:"https://jsonplaceholder.typicode.com"},"https://jsonplaceholder.typicode.com")),", a free online REST API with some fake data.\nWe will use the API at ",(0,a.kt)("inlineCode",{parentName:"p"},"/users")," to get a list of users, and ",(0,a.kt)("inlineCode",{parentName:"p"},"/users/:id/posts")," to get the posts for each user, and compose them into a single GraphQL schema."),(0,a.kt)("p",null,"We can use the following formats to define our GraphQL schema: ",(0,a.kt)("inlineCode",{parentName:"p"},".graphql"),", ",(0,a.kt)("inlineCode",{parentName:"p"},".yml"),", ",(0,a.kt)("inlineCode",{parentName:"p"},".json"),"."),(0,a.kt)("p",null,"Create one of the following files and paste the contents into it."),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"graphql",label:"graphql",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"jsonplaceholder.graphql")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql",metastring:"showLineNumbers",showLineNumbers:!0},'schema\n  # Specify server configuration: Start tailcall server at 0.0.0.0:8000 and enable GraphiQL playground\n  @server(port: 8000, graphiql: true)\n  # Specify a base url for all http requests\n  @upstream(baseURL: "http://jsonplaceholder.typicode.com") {\n  query: Query\n}\n\ntype Query {\n  # Specify the http path for the users query\n  users: [User] @http(path: "/users")\n}\n\n# Create a user type with the fields returned by the users api\ntype User {\n  id: Int!\n  name: String!\n  username: String!\n  email: String!\n\n  # Extend the user type with the posts field\n  # Use the current user\'s id to construct the path\n  posts: [Post] @http(path: "/users/{{value.id}}/posts")\n}\n\n# Create a post type with the fields returned by the posts api\ntype Post {\n  id: Int!\n  title: String!\n  body: String!\n}\n'))),(0,a.kt)(i.Z,{value:"yml",label:"yml",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"jsonplaceholder.yml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml",metastring:"showLineNumbers",showLineNumbers:!0},'server:\n  port: 8000\n  graphiql: true\n  queryValidation: false\n  hostname: "0.0.0.0"\nupstream:\n  baseURL: "http://jsonplaceholder.typicode.com"\n  httpCache: true\nschema:\n  query: Query\ntypes:\n  Post:\n    fields:\n      body:\n        type: String\n        required: true\n      id:\n        type: Int\n        required: true\n      title:\n        type: String\n        required: true\n      user:\n        type: User\n        http:\n          path: /users/{{value.userId}}\n      userId:\n        type: Int\n        required: true\n  Query:\n    fields:\n      posts:\n        type: Post\n        list: true\n        http:\n          path: /posts\n  User:\n    fields:\n      email:\n        type: String\n        required: true\n      id:\n        type: Int\n        required: true\n      name:\n        type: String\n        required: true\n      phone:\n        type: String\n      username:\n        type: String\n        required: true\n      website:\n        type: String\n'))),(0,a.kt)(i.Z,{value:"json",label:"json",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"jsonplaceholder.json")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"showLineNumbers",showLineNumbers:!0},'{\n  "server": {\n    "port": 8000,\n    "graphiql": true,\n    "queryValidation": false,\n    "hostname": "0.0.0.0"\n  },\n  "upstream": {\n    "baseURL": "http://jsonplaceholder.typicode.com",\n    "httpCache": true\n  },\n  "schema": {\n    "query": "Query"\n  },\n  "types": {\n    "Post": {\n      "fields": {\n        "body": {\n          "type": "String",\n          "required": true\n        },\n        "id": {\n          "type": "Int",\n          "required": true\n        },\n        "title": {\n          "type": "String",\n          "required": true\n        },\n        "user": {\n          "type": "User",\n          "http": {\n            "path": "/users/{{value.userId}}"\n          }\n        },\n        "userId": {\n          "type": "Int",\n          "required": true\n        }\n      }\n    },\n    "Query": {\n      "fields": {\n        "posts": {\n          "type": "Post",\n          "list": true,\n          "http": {\n            "path": "/posts"\n          }\n        }\n      }\n    },\n    "User": {\n      "fields": {\n        "email": {\n          "type": "String",\n          "required": true\n        },\n        "id": {\n          "type": "Int",\n          "required": true\n        },\n        "name": {\n          "type": "String",\n          "required": true\n        },\n        "phone": {\n          "type": "String"\n        },\n        "username": {\n          "type": "String",\n          "required": true\n        },\n        "website": {\n          "type": "String"\n        }\n      }\n    }\n  }\n}\n')))),(0,a.kt)("p",null,"The above file is a standard ",(0,a.kt)("inlineCode",{parentName:"p"},".graphQL")," file, with a few additions such as ",(0,a.kt)("inlineCode",{parentName:"p"},"@upstream")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"@http")," directives. So basically we specify the GraphQL schema and how to resolve that GraphQL schema in the same file, without having to write any code!"))}h.isMDXComponent=!0}}]);