"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2079],{6712:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>s,default:()=>g,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var l=i(5893),o=i(1151);const r={title:"Logging"},s=void 0,a={id:"guides/logging",title:"Logging",description:"Logging serves as a crucial tool for gaining insights into code execution and troubleshooting challenges in software development. The verbosity of the logs can be configured using different log levels. The log level of the application can be configured using TAILCALLLOGLEVEL or TCLOGLEVEL environment variables. The available log levels are:",source:"@site/docs/guides/logging.md",sourceDirName:"guides",slug:"/guides/logging",permalink:"/docs/guides/logging",draft:!1,unlisted:!1,editUrl:"https://github.com/tailcallhq/tailcall/blob/main/docs/guides/logging.md",tags:[],version:"current",frontMatter:{title:"Logging"},sidebar:"tutorialSidebar",previous:{title:"Environment Variables",permalink:"/docs/guides/environment-variables"},next:{title:"Tackling N + 1",permalink:"/docs/guides/n+1"}},t={},c=[{value:"error",id:"error",level:3},{value:"warn",id:"warn",level:3},{value:"info",id:"info",level:3},{value:"debug",id:"debug",level:3},{value:"trace",id:"trace",level:3},{value:"off",id:"off",level:3}];function d(e){const n={admonition:"admonition",code:"code",h3:"h3",img:"img",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["Logging serves as a crucial tool for gaining insights into code execution and troubleshooting challenges in software development. The verbosity of the logs can be configured using different log levels. The log level of the application can be configured using ",(0,l.jsx)(n.code,{children:"TAILCALL_LOG_LEVEL"})," or ",(0,l.jsx)(n.code,{children:"TC_LOG_LEVEL"})," environment variables. The available log levels are:"]}),"\n",(0,l.jsx)(n.h3,{id:"error",children:"error"}),"\n",(0,l.jsx)(n.p,{children:"This is the highest severity level. It indicates a critical issue that may lead to the failure of the program or a part of it."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"TAILCALL_LOG_LEVEL=error tailcall <COMMAND>\n# or\nTC_LOG_LEVEL=error tailcall <COMMAND>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"warn",children:"warn"}),"\n",(0,l.jsx)(n.p,{children:"This log level signifies potential issues or warnings that do not necessarily result in immediate failure but may require attention."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"TAILCALL_LOG_LEVEL=warn tailcall <COMMAND>\n# or\nTC_LOG_LEVEL=warn tailcall <COMMAND>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"info",children:"info"}),"\n",(0,l.jsx)(n.p,{children:"This level offers general information about the program's execution, providing insights into its state and activities."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"TAILCALL_LOG_LEVEL=info tailcall <COMMAND>\n# or\nTC_LOG_LEVEL=info tailcall <COMMAND>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"debug",children:"debug"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"debug"})," log level is useful for developers during the debugging process, providing detailed information about the program's internal workings."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"TAILCALL_LOG_LEVEL=debug tailcall <COMMAND>\n# or\nTC_LOG_LEVEL=debug tailcall <COMMAND>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"trace",children:"trace"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"trace"})," log level is the most detailed logging level, used for fine-grained debugging. This level provides exhaustive details about the program's execution flow."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"TAILCALL_LOG_LEVEL=trace tailcall <COMMAND>\n# or\nTC_LOG_LEVEL=trace tailcall <COMMAND>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"off",children:"off"}),"\n",(0,l.jsx)(n.p,{children:"This level serves as a special indicator for generating no logs, allowing the option to disable logging entirely."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"TAILCALL_LOG_LEVEL=off tailcall <COMMAND>\n# or\nTC_LOG_LEVEL=off tailcall <COMMAND>\n"})}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsxs)(n.p,{children:["By default, the log level is set to ",(0,l.jsx)(n.code,{children:"info"}),"."]})}),"\n",(0,l.jsxs)(n.p,{children:["Log levels are hierarchical, meaning if you set the log level to a specific level, it includes all the levels above it. For example, setting the log level to ",(0,l.jsx)(n.code,{children:"info"})," will include logs at the ",(0,l.jsx)(n.code,{children:"info"}),", ",(0,l.jsx)(n.code,{children:"warn"}),", and ",(0,l.jsx)(n.code,{children:"error"})," levels, but exclude ",(0,l.jsx)(n.code,{children:"debug"})," and ",(0,l.jsx)(n.code,{children:"trace"})," logs."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"Hierarchy of Log Levels",src:i(2415).Z+"",width:"885",height:"885"})}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsxs)(n.p,{children:["Log levels are flexible and can be provided in either uppercase or lowercase. For instance, setting ",(0,l.jsx)(n.code,{children:"TAILCALL_LOG_LEVEL=DEBUG"})," or ",(0,l.jsx)(n.code,{children:"TAILCALL_LOG_LEVEL=debug"})," will yield the same result."]})})]})}function g(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},2415:(e,n,i)=>{i.d(n,{Z:()=>l});const l=i.p+"assets/images/logging-a3166c4a8f10ac178e63de6dafdbd93b.png"},1151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>s});var l=i(7294);const o={},r=l.createContext(o);function s(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);