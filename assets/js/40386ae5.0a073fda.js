"use strict";(self.webpackChunktailcall_run=self.webpackChunktailcall_run||[]).push([[8269],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},551:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={title:"Run the server in watch mode using entr",sidebar_position:7},o=void 0,l={unversionedId:"guides/developer",id:"guides/developer",title:"Run the server in watch mode using entr",description:"Developers often find themselves in situations where they need to run a server in watch mode to streamline the development process. This guide will introduce you to [entr], a versatile file-watcher tool, and demonstrate how to run your server in watch mode with it. We'll also touch on the installation process and suggest some best practices to optimize your workflow.",source:"@site/docs/guides/developer.md",sourceDirName:"guides",slug:"/guides/developer",permalink:"/docs/guides/developer",draft:!1,editUrl:"https://github.com/tailcallhq/tailcallhq.github.io/tree/develop/docs/guides/developer.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Run the server in watch mode using entr",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Tackling N + 1",permalink:"/docs/guides/n+1"}},s={},p=[{value:"Why You Need Watch Mode",id:"why-you-need-watch-mode",level:2},{value:"Using <code>entr</code> for Watch Mode",id:"using-entr-for-watch-mode",level:2},{value:"1.Installation Guide for <code>entr</code>",id:"1installation-guide-for-entr",level:3},{value:"macOS",id:"macos",level:4},{value:"Installation on macOS using Homebrew",id:"installation-on-macos-using-homebrew",level:5},{value:"Windows",id:"windows",level:4},{value:"Installation on Windows using WSL (Windows Subsystem for Linux)",id:"installation-on-windows-using-wsl-windows-subsystem-for-linux",level:5},{value:"Linux",id:"linux",level:4},{value:"Installation on Linux",id:"installation-on-linux",level:5},{value:"2.Running Your Server in Watch Mode",id:"2running-your-server-in-watch-mode",level:3},{value:"3.Enjoy Auto-Reloading",id:"3enjoy-auto-reloading",level:3},{value:"Some Best Practices",id:"some-best-practices",level:2}],u={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Developers often find themselves in situations where they need to run a server in watch mode to streamline the development process. This guide will introduce you to ",(0,i.kt)("a",{parentName:"p",href:"https://eradman.com/entrproject/"},"entr"),", a versatile file-watcher tool, and demonstrate how to run your server in watch mode with it. We'll also touch on the installation process and suggest some best practices to optimize your workflow."),(0,i.kt)("h2",{id:"why-you-need-watch-mode"},"Why You Need Watch Mode"),(0,i.kt)("p",null,"Running a server in watch mode offers several key benefits:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Real-time Feedback")," : Watch mode ensures that your server stays up-to-date with your code changes. It immediately reflects those changes, providing you with real-time feedback during development."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Efficency")," : Manually restarting the server each time you modify code can be tedious and time-consuming. Watch mode automates this process, making development more efficient."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Debugging")," : It helps you quickly identify and fix issues as they arise, reducing the debugging time. When your server automatically restarts upon code changes, you catch errors sooner.")),(0,i.kt)("h2",{id:"using-entr-for-watch-mode"},"Using ",(0,i.kt)("inlineCode",{parentName:"h2"},"entr")," for Watch Mode"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"entr")," is a powerful file-watching utility that makes running a server in watch mode a breeze. Let's go through the steps for the installation process for different operating system :"),(0,i.kt)("h3",{id:"1installation-guide-for-entr"},"1.Installation Guide for ",(0,i.kt)("inlineCode",{parentName:"h3"},"entr")),(0,i.kt)("h4",{id:"macos"},"macOS"),(0,i.kt)("h5",{id:"installation-on-macos-using-homebrew"},"Installation on macOS using Homebrew"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},'Open the Terminal, which you can find in the "Utilities" folder within the "Applications" folder.')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install Homebrew if you haven't already. Run the following command in your Terminal:"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},'    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"\n')),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Once Homebrew is installed, you can install ",(0,i.kt)("inlineCode",{parentName:"li"},"entr")," by running the following command:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"    brew install entr\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"To verify the installation, run:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"    entr --version\n")),(0,i.kt)("p",null,"If the installation is done correctly it will shown the latest version of the ",(0,i.kt)("inlineCode",{parentName:"p"},"entr")),(0,i.kt)("h4",{id:"windows"},"Windows"),(0,i.kt)("h5",{id:"installation-on-windows-using-wsl-windows-subsystem-for-linux"},"Installation on Windows using WSL (Windows Subsystem for Linux)"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install Windows Subsystem for Linux (WSL) on your Windows machine by following Microsoft's official documentation.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"After setting up WSL, open the Linux terminal by running:"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"    wsl -d <DistributionName>\n")),(0,i.kt)("p",null,"Replace ",(0,i.kt)("inlineCode",{parentName:"p"},"<DistributionName>")," with the name of the Linux distribution that you have installed."),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Install entr within the Linux terminal using the package manager of your chosen Linux distribution. For example, on Ubuntu, you can use:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"    sudo apt update\n    sudo apt install entr\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Verify the installation by running:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"    entr --version\n")),(0,i.kt)("p",null,"If the installation is done correctly it will shown the latest version of the ",(0,i.kt)("inlineCode",{parentName:"p"},"entr")),(0,i.kt)("h4",{id:"linux"},"Linux"),(0,i.kt)("h5",{id:"installation-on-linux"},"Installation on Linux"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"On Linux, you can install ",(0,i.kt)("inlineCode",{parentName:"li"},"entr")," using your distribution's package manager. For example, on Ubuntu, use:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"    sudo apt update\n    sudo apt install entr\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"To verify the installation, run:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"    entr --version\n")),(0,i.kt)("p",null,"If the installation is done correctly it will shown the latest version of the ",(0,i.kt)("inlineCode",{parentName:"p"},"entr")),(0,i.kt)("h3",{id:"2running-your-server-in-watch-mode"},"2.Running Your Server in Watch Mode"),(0,i.kt)("p",null,"To run your server in watch mode using ",(0,i.kt)("inlineCode",{parentName:"p"},"entr"),", you'll utilize the ",(0,i.kt)("inlineCode",{parentName:"p"},"ls")," command to list the files you want to monitor. The general syntax is as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"    ls ./examples/jsonplaceholder.graphql | entr -r tc start ./examples/jsonplaceholder.graphql\n")),(0,i.kt)("p",null,"This command uses ",(0,i.kt)("inlineCode",{parentName:"p"},"entr")," to continuously monitor the ",(0,i.kt)("inlineCode",{parentName:"p"},"jsonplaceholder.graphql")," file and when it changes, It runs the ",(0,i.kt)("inlineCode",{parentName:"p"},"tc start")," command with the file as an argument"),(0,i.kt)("p",null,"The above command is described in detail below :"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"ls ./examples/jsonplaceholder.graphql"),' : This part of the code lists the file or files you want to monitor for changes. In this case, it lists the file named "jsonplaceholder.graphql" within the "examples" directory.')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"|")," : The pipe symbol ('|') is used to take the output of the preceding command (the file listing) and feed it as input to the following command (entr).")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"entr -r tc start ./examples/jsonplaceholder.graphql"),' : This is the command that will be executed whenever the file "jsonplaceholder.graphql" changes.'))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"entr")," is a command-line tool for running arbitrary commands whenever files change. It monitors the files specified in the previous command (",(0,i.kt)("inlineCode",{parentName:"p"},"ls ./examples/jsonplaceholder.graphql"),")")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"r")," : This flag tells entr to continue running the command even if it encounters errors (it runs the command repeatedly).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"tc start ./examples/jsonplaceholder.graphql")," : This is the command to run when changes are detected. It is executing a command ",(0,i.kt)("inlineCode",{parentName:"p"},"tc start")," with the file path\n",(0,i.kt)("inlineCode",{parentName:"p"},"./examples/jsonplaceholder.graphql")," as an argument"))),(0,i.kt)("h3",{id:"3enjoy-auto-reloading"},"3.Enjoy Auto-Reloading"),(0,i.kt)("p",null,"With this setup, your server will run in watch mode. Whenever a file in the specified directory changes, ",(0,i.kt)("inlineCode",{parentName:"p"},"entr")," will trigger your server to automatically restart, giving you an up-to-date development environment."),(0,i.kt)("h2",{id:"some-best-practices"},"Some Best Practices"),(0,i.kt)("p",null,"To make the most of running a server in watch mode with ",(0,i.kt)("inlineCode",{parentName:"p"},"entr"),", consider the following best practices:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Selective File Watching"),": Be selective about which files you monitor with ",(0,i.kt)("inlineCode",{parentName:"p"},"entr"),". Watching unnecessary files can lead to increased CPU and memory usage. Focus on the essential files related to your project.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Organize Your Project"),": Maintain a well-organized project structure to make it easier to identify which files need monitoring.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Clear Output"),": Clear the terminal output before running entr to have a clean workspace.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Version Control"),": Ensure that your project is under version control (e.g., Git) to track changes and easily revert if necessary.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Update ",(0,i.kt)("inlineCode",{parentName:"strong"},"entr")),": Kepp ",(0,i.kt)("inlineCode",{parentName:"p"},"entr")," up to date with the latest version to benefit from bug fixes and improvements."))),(0,i.kt)("p",null,"By following these best practices and using ",(0,i.kt)("inlineCode",{parentName:"p"},"entr")," effectively, you can significantly improve your development workflow. Experiment with ",(0,i.kt)("inlineCode",{parentName:"p"},"entr"),", adapt it to your project's specific requirements, and enjoy a smoother and more efficient development process. Happy coding!"))}c.isMDXComponent=!0}}]);